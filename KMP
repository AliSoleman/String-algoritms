	 const ll NN = 10 + 3e6;
	const ll Mod=1e9+7;
	const ll Inf=1e9;
	int fail[NN] ;
	string s, t ;
	vector<int>idx ;
	 
	void build()
	{
	    int len = 0 ;
	    for (int i = 1 ; i< t.size() ; i++)
	    {
	        while(len > 0 && t[i] != t[len])
	            len = fail[len-1] ;
	 
	        if (t[i] == t[len])
	            ++len ;
	        fail[i] = len ;
	    }
	}
	 
	void search_()
	{
	    int len = 0 ;
	 
	    for (int i = 0 ; i<s.size() ; i++)
	    {
	        while(len > 0 && s[i] != t[len])
	            len = fail[len-1] ;
	 
	        if (s[i] == t[len])
	            ++len ;
	        if (len == t.size())
	        {
	            idx.push_back(i-t.size() + 1) ;
	            len = fail[len-1] ;
	        }
	    }
	}
	const ll NN = 10 + 3e6;
	const ll Mod=1e9+7;
	const ll Inf=1e9;
	int fail[NN] ;
	string s, t ;
	vector<int>idx ;
	 
	void build()
	{
	    int len = 0 ;
	    for (int i = 1 ; i< t.size() ; i++)
	    {
	        while(len > 0 && t[i] != t[len])
	            len = fail[len-1] ;
	 
	        if (t[i] == t[len])
	            ++len ;
	        fail[i] = len ;
	    }
}
	 
	void search_()
	{
	    int len = 0 ;
	 
	    for (int i = 0 ; i<s.size() ; i++)
	    {
	        while(len > 0 && s[i] != t[len])
	            len = fail[len-1] ;
	 
	        if (s[i] == t[len])
	            ++len ;
	        if (len == t.size())
	        {
	            idx.push_back(i-t.size() + 1) ;
	            len = fail[len-1] ;
        }
	  }
